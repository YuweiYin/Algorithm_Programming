#!/usr/bin/env python
# -*- coding:utf-8 -*-
"""=================================================================
@Project : Algorithm_YuweiYin/LeetCode-All-Solution/Python3
@File    : LC-0389-Find-the-Difference.py
@Author  : [YuweiYin](https://github.com/YuweiYin)
@Date    : 2022-02-07
=================================================================="""

import sys
import time
# from typing import List
# import collections

"""
LeetCode - 0389 - (Easy) - Find the Difference
https://leetcode.com/problems/find-the-difference/

Description & Requirement:
    You are given two strings s and t.

    String t is generated by random shuffling string s and 
    then add one more letter at a random position.

    Return the letter that was added to t.

Example 1:
    Input: s = "abcd", t = "abcde"
    Output: "e"
    Explanation: 'e' is the letter that was added.
Example 2:
    Input: s = "", t = "y"
    Output: "y"

Constraints:
    0 <= s.length <= 1000
    t.length == s.length + 1
    s and t consist of lowercase English letters.
"""


class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        # exception case
        if not isinstance(s, str) or not isinstance(t, str):
            return ""  # Error input type
        if len(s) + 1 != len(t):
            return ""  # Error input type
        if len(s) == 0:
            return t
        # main method: (hash dict, record each char and its counter in t, then scan s, the rest one char in dict is res)
        return self._findTheDifference(s, t)

    def _findTheDifference(self, s: str, t: str) -> str:
        hash_dict = dict({})  # key: char; value: its counter

        # scan t, record each char and its counter in t
        for char in t:
            if char not in hash_dict:
                hash_dict[char] = 1
            else:
                hash_dict[char] += 1

        # scan s, subtract counter
        for char in s:
            if char not in hash_dict:
                return ""  # Error input type
            else:
                hash_dict[char] -= 1

        # find the rest 1 char
        for char, counter in hash_dict.items():
            if counter == 1:
                return char

        return ""  # Error input type


def main():
    # Example 1: Output: "e"
    s = "abcd"
    t = "abcde"

    # Example 2: Output: "y"
    # s = ""
    # t = "y"

    # init instance
    solution = Solution()

    # run & time
    start = time.process_time()
    ans = solution.findTheDifference(s, t)
    end = time.process_time()

    # show answer
    print('\nAnswer:')
    print(ans)

    # show time consumption
    print('Running Time: %.5f ms' % ((end - start) * 1000))


if __name__ == "__main__":
    sys.exit(main())
